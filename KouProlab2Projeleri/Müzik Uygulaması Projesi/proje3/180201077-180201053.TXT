package songsfile;

public class Arama {

    private int albumid;
    private String albumName;
    private String albumAuthor;
    private String albumSong;
    private String albumDate;
    private String albumType;
    private int albumCount;

    public Arama(int albumid,String albumName, String albumAuthor, String albumSong, String albumType, String albumDate,int albumCount) {
        this.albumid=albumid;
        this.albumName = albumName;
        this.albumAuthor = albumAuthor;
        this.albumSong = albumSong;
        this.albumDate = albumDate;
        this.albumType = albumType;
        this.albumCount= albumCount;
    }

    public int getAlbumCount() {
        return albumCount;
    }
    

    /**
     * @return the albumName
     */
    public String getAlbumName() {
        return albumName;
    }

    /**
     * @return the albumAuthor
     */
    public String getAlbumAuthor() {
        return albumAuthor;
    }

    /**
     * @return the albumSong
     */
    public String getAlbumSong() {
        return albumSong;
    }

    /**
     * @return the albumDate
     */
    public String getAlbumDate() {
        return albumDate;
    }

    /**
     * @return the albumType
     */
    public String getAlbumType() {
        return albumType;
    }

    /**
     * @return the albumID
     */
    public int getAlbumid() {
        return albumid;
    }

}
****************************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

/**
 *
 * @author Arthas
 */
public class AramaSanatci {
    private int authorid;
    private String authorName;
    private String authorCountry;
    
    public AramaSanatci(int authorid,String authorName,String authorCountry){
        this.authorid=authorid;
        this.authorName=authorName;
        this.authorCountry=authorCountry;
    }

    /**
     * @return the authorid
     */
    public int getAuthorid() {
        return authorid;
    }

    /**
     * @return the authorName
     */
    public String getAuthorName() {
        return authorName;
    }

    /**
     * @return the authorCountry
     */
    public String getAuthorCountry() {
        return authorCountry;
    }
}
*********************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

/**
 *
 * @author Arthas
 */
public class AramaSarki {
    private int songsid;
    private String songsName;
    private String songsDate;
    private String songsAuthor;
    private String songsAlbum;
    private String songsType;
    private int songsTime;
    private int songsCount;
    
    public AramaSarki(int songsid,String songsName,String songsDate,String songsAuthor,String songsAlbum,String songsType,int songsTime,int songsCount){
        
        this.songsid=songsid;
        this.songsName=songsName;
        this.songsDate=songsDate;
        this.songsAuthor=songsAuthor;
        this.songsAlbum=songsAlbum;
        this.songsType=songsType;
        this.songsTime=songsTime;
        this.songsCount=songsCount;
 
    }

    /**
     * @return the songsid
     */
    public int getSongsid() {
        return songsid;
    }

    /**
     * @return the songsName
     */
    public String getSongsName() {
        return songsName;
    }

    /**
     * @return the songsDate
     */
    public String getSongsDate() {
        return songsDate;
    }

    /**
     * @return the songsAuthor
     */
    public String getSongsAuthor() {
        return songsAuthor;
    }

    /**
     * @return the songsAlbum
     */
    public String getSongsAlbum() {
        return songsAlbum;
    }

    /**
     * @return the songsType
     */
    public String getSongsType() {
        return songsType;
    }

    /**
     * @return the songsTime
     */
    public int getSongsTime() {
        return songsTime;
    }

    /**
     * @return the songsCount
     */
    public int getSongsCount() {
        return songsCount;
    }
}
**********************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

/**
 *
 * @author UMUT
 */
public class PlaylistArama {

     private int PlaylistId;
    private String PlaylistSahibi;
    private String PlaylistAlbumAdi;
    private String PlaylistSarkici;
    private String PlaylistAdi;
    private String PlaylistTuru;
    private String PlaylistCıkıs;
    private int Playlistdinleme;

    public PlaylistArama(int PlaylistId,String PlaylistSahibi, String PlaylistAlbumAdi, String PlaylistSarkici, String PlaylistAdi, String PlaylistTuru, String PlaylistCıkıs, int Playlistdinleme) {
        this.PlaylistId=PlaylistId;
        this.PlaylistSahibi = PlaylistSahibi;
        this.PlaylistAlbumAdi = PlaylistAlbumAdi;
        this.PlaylistSarkici = PlaylistSarkici;
        this.PlaylistAdi = PlaylistAdi;
        this.PlaylistTuru = PlaylistTuru;
        this.PlaylistCıkıs = PlaylistCıkıs;
        this.Playlistdinleme = Playlistdinleme;
    }

    public int getPlaylistId() {
        return PlaylistId;
    }

   
    

    public String getPlaylistSahibi() {
        return PlaylistSahibi;
    }

    public String getPlaylistAlbumAdi() {
        return PlaylistAlbumAdi;
    }

    public String getPlaylistSarkici() {
        return PlaylistSarkici;
    }

    public String getPlaylistAdi() {
        return PlaylistAdi;
    }

    public String getPlaylistTuru() {
        return PlaylistTuru;
    }

    public String getPlaylistCıkıs() {
        return PlaylistCıkıs;
    }

    public int getPlaylistdinleme() {
        return Playlistdinleme;
    }

   
    

}
***********************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

import java.sql.SQLException;

/**
 *
 * @author Arthas
 */

public class SongsFile {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws SQLException {
        
        usersOradmin pnl=new usersOradmin();
        pnl.setVisible(true);
        
    }
    
}
***********************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

/**
 *
 * @author UMUT
 */
public class TakipArama {
    private int kullanıcıid;
    private String kullanıcıadi;
    private String kullanıcıtakip;

   

    public TakipArama(int kullanıcıid, String kullanıcıadi, String kullanıcıtakip) {
        this.kullanıcıid = kullanıcıid;
        this.kullanıcıadi = kullanıcıadi;
        this.kullanıcıtakip = kullanıcıtakip;
    }

    public int getKullanıcıid() {
        return kullanıcıid;
    }

    public String getKullanıcıadi() {
        return kullanıcıadi;
    }

    public String getKullanıcıtakip() {
        return kullanıcıtakip;
    }
    
    
}
************************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

/**
 *
 * @author UMUT
 */
public class UyelikArama {
    private int uyelikId;
    private int uyelikTipi;
    private String uyelikAdi;

    public UyelikArama(int uyelikId, int uyelikTipi, String uyelikAdi) {
        this.uyelikId = uyelikId;
        this.uyelikTipi = uyelikTipi;
        this.uyelikAdi = uyelikAdi;
    }

    public UyelikArama(int uyelikTipi, String uyelikAdi) {
        this.uyelikTipi = uyelikTipi;
        this.uyelikAdi = uyelikAdi;
    }

    public int getUyelikId() {
        return uyelikId;
    }

    public int getUyelikTipi() {
        return uyelikTipi;
    }

    public String getUyelikAdi() {
        return uyelikAdi;
    }
    
}
*************************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.util.Random;
/**
 *
 * @author Arthas
 */
public class adminMainPageAlbum extends javax.swing.JFrame implements TableModelListener {

    /**
     * Creates new form adminMainPage
     */
    
    public adminMainPageAlbum() {
        initComponents();
        showAlbums();
    }

    public ArrayList<Arama> albumList() {
        ArrayList<Arama> albumList = new ArrayList<>();
        Statement st = null;
        ResultSet rs = null;
        try {
            st = connection.connect().createStatement();
            String searchQuery = "SELECT * FROM 'album'";
            rs = st.executeQuery(searchQuery);
            Arama arama;
            while (rs.next()) {
                arama = new Arama(
                        rs.getInt("albumid"),
                        rs.getString("albumName"),
                        rs.getString("albumAuthor"),
                        rs.getString("albumSong"),
                        rs.getString("albumDate"),
                        rs.getString("albumType"),
                        rs.getInt("albumcount")
                );
                albumList.add(arama);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                st.close();
            } catch (Exception e) {

            }
        }

        return albumList;
    }

    private void showAlbums() {
        ArrayList<Arama> sonuc = albumList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < sonuc.size(); i++) {
            row[0] = sonuc.get(i).getAlbumid();
            row[1] = sonuc.get(i).getAlbumName();
            row[2] = sonuc.get(i).getAlbumAuthor();
            row[3] = sonuc.get(i).getAlbumSong();
            row[4] = sonuc.get(i).getAlbumDate();
            row[5] = sonuc.get(i).getAlbumType();
            row[6] = sonuc.get(i).getAlbumCount();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        scrollPane1 = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        turu = new javax.swing.JTextField();
        albumAdi = new javax.swing.JTextField();
        sarkiciAdi = new javax.swing.JTextField();
        sarkiAdi = new javax.swing.JTextField();
        cikisTarihi = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        kaydetButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        turnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Albüm ID", "Albüm Adı", "Şarkıcı", "Şarkı", "Çıkış Tarihi", "Tür"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        scrollPane1.add(jScrollPane1);

        getContentPane().add(scrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 540, 560));
        getContentPane().add(turu, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 280, 190, 40));
        getContentPane().add(albumAdi, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, 190, 40));
        getContentPane().add(sarkiciAdi, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 90, 210, 40));
        getContentPane().add(sarkiAdi, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 190, 190, 40));
        getContentPane().add(cikisTarihi, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 190, 210, 40));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Türü:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 250, 190, 30));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("AlbümAdı:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, 170, 30));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Şarkıcı Adı:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 50, 200, 30));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Şarkı Adı:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, 180, 30));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Çıkış Tarihi:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 160, 210, 30));

        resetButton.setBackground(new java.awt.Color(0, 0, 0));
        resetButton.setForeground(new java.awt.Color(255, 255, 255));
        resetButton.setText("Temizle");
        resetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetButtonMouseClicked(evt);
            }
        });
        getContentPane().add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 460, 120, 50));

        deleteButton.setBackground(new java.awt.Color(0, 0, 0));
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Sil");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 460, 120, 50));

        kaydetButton.setBackground(new java.awt.Color(0, 0, 0));
        kaydetButton.setForeground(new java.awt.Color(255, 255, 255));
        kaydetButton.setText("Kaydet");
        kaydetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kaydetButtonMouseClicked(evt);
            }
        });
        getContentPane().add(kaydetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 390, 120, 50));

        updateButton.setBackground(new java.awt.Color(0, 0, 0));
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Güncelle");
        updateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateButtonMouseClicked(evt);
            }
        });
        getContentPane().add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 390, 120, 50));

        turnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        turnBack.setText("<---");
        turnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                turnBackMouseClicked(evt);
            }
        });
        getContentPane().add(turnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 600, 80, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/adminBackg.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, 650));

        jMenu1.setBackground(new java.awt.Color(255, 255, 255));
        jMenu1.setText("Albüm Düzenle");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setBackground(new java.awt.Color(255, 255, 255));
        jMenu2.setText("Şarkı Düzenle");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setBackground(new java.awt.Color(255, 255, 255));
        jMenu3.setText("Sanatçı Düzenle");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>                        


    private void resetButtonMouseClicked(java.awt.event.MouseEvent evt) {                                         

        albumAdi.setText("");
        sarkiAdi.setText("");
        sarkiciAdi.setText("");
        cikisTarihi.setText("");
        turu.setText("");
    }                                        

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {                                          
        PreparedStatement ps = null;

        try {
            int row = table.getSelectedRow();
            String value = (table.getModel().getValueAt(row, 0).toString());
            String Query = "DELETE FROM album WHERE albumid=" + value;

            ps = connection.connect().prepareStatement(Query);

            ps.executeUpdate();
            if (ps.executeUpdate() > 1) {
                JOptionPane.showMessageDialog(null, "ALBUM SILINDI");
            }

            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showAlbums();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();
            } catch (Exception e) {

            }
        }
    }                                         

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {                                   
        int i = table.getSelectedRow();
        TableModel model = table.getModel();
        albumAdi.setText(model.getValueAt(i, 1).toString());
        sarkiciAdi.setText(model.getValueAt(i, 2).toString());
        sarkiAdi.setText(model.getValueAt(i, 3).toString());
        cikisTarihi.setText(model.getValueAt(i, 5).toString());
        turu.setText(model.getValueAt(i, 4).toString());
    }                                  

    private void kaydetButtonMouseClicked(java.awt.event.MouseEvent evt) {                                          
        PreparedStatement ps = null;
        try {
            Random rand = new Random();
            String Query = "INSERT INTO 'album'('albumName','albumAuthor','albumSong','albumDate','albumType','albumcount')VALUES(?,?,?,?,?,?)";
            ps = connection.connect().prepareStatement(Query);

            ps.setString(1, albumAdi.getText());
            ps.setString(2, sarkiciAdi.getText());
            ps.setString(3, sarkiAdi.getText());
            ps.setString(4, cikisTarihi.getText());
            ps.setString(5, turu.getText());
            ps.setInt(6, (rand.nextInt(10000)+1000));
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "ALBUM EKLENDİ");

            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showAlbums();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();
            } catch (Exception e) {

            }
        }
    }                                         

    private void updateButtonMouseClicked(java.awt.event.MouseEvent evt) {                                          
        PreparedStatement ps = null;
        try {
            int row = table.getSelectedRow();
            String value = (table.getModel().getValueAt(row, 0).toString());
            String Query = "UPDATE album SET albumName=?,albumAuthor=?,albumSong=?,albumDate=?,albumType=? WHERE albumid =" + value;
            ps = connection.connect().prepareStatement(Query);

            ps.setString(1, albumAdi.getText());
            ps.setString(2, sarkiciAdi.getText());
            ps.setString(3, sarkiAdi.getText());
            ps.setString(4, cikisTarihi.getText());
            ps.setString(5, turu.getText());

            ps.executeUpdate();
            if (ps.executeUpdate() > 1) {
                JOptionPane.showMessageDialog(null, "ALBUM GUNCELLENDİ");
            }

            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showAlbums();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();
            } catch (Exception e) {

            }
        }
    }                                         

    private void turnBackMouseClicked(java.awt.event.MouseEvent evt) {                                      
        new adminPanel().setVisible(true);
        this.setVisible(false);
    }                                     

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {                                    

    }                                   

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {                                    
        new adminMainPageSarki().setVisible(true);
        this.setVisible(false);
    }                                   

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {                                    
        new adminMainPageSanatci().setVisible(true);
        this.setVisible(false);
    }                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminMainPageAlbum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminMainPageAlbum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminMainPageAlbum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminMainPageAlbum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminMainPageAlbum().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JTextField albumAdi;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cikisTarihi;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kaydetButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextField sarkiAdi;
    private javax.swing.JTextField sarkiciAdi;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JButton turnBack;
    private javax.swing.JTextField turu;
    private javax.swing.JButton updateButton;
    // End of variables declaration                   

    @Override
    public void tableChanged(TableModelEvent tme) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
************************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Arthas
 */
public class adminMainPageSanatci extends javax.swing.JFrame implements TableModelListener {

    /**
     * Creates new form adminMainPage
     */
    public adminMainPageSanatci() {
        initComponents();
        showSanatci();
    }

    public ArrayList<AramaSanatci> sanatciList() {
        ArrayList<AramaSanatci> sanatciList = new ArrayList<>();
        Statement st = null;
        ResultSet rs = null;
        try {
            st = connection.connect().createStatement();
            String searchQuery = "SELECT * FROM author";
            rs = st.executeQuery(searchQuery);
            AramaSanatci aramaSanatci;
            while (rs.next()) {
                aramaSanatci = new AramaSanatci(
                        rs.getInt("authorid"),
                        rs.getString("authorName"),
                        rs.getString("authorCountry")
                );
                sanatciList.add(aramaSanatci);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                st.close();
            } catch (Exception e) {

            }
        }

        return sanatciList;
    }

    private void showSanatci() {
        ArrayList<AramaSanatci> sonuc = sanatciList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[3];

        for (int i = 0; i < sonuc.size(); i++) {
            row[0] = sonuc.get(i).getAuthorid();
            row[1] = sonuc.get(i).getAuthorName();
            row[2] = sonuc.get(i).getAuthorCountry();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        scrollPane1 = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        sanatciAd = new javax.swing.JTextField();
        sanatciCountry = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        kaydetButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        turnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sanatçı ID", "Sanatçı Ismi", "Sanatçı Ulke"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        scrollPane1.add(jScrollPane1);

        getContentPane().add(scrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 540, 560));
        getContentPane().add(sanatciAd, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, 210, 40));
        getContentPane().add(sanatciCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 200, 210, 40));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Sanatçı Adı:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, 170, 30));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Sanatçı'nın Ülkesi:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, 200, 30));

        resetButton.setBackground(new java.awt.Color(0, 0, 0));
        resetButton.setForeground(new java.awt.Color(255, 255, 255));
        resetButton.setText("Temizle");
        resetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetButtonMouseClicked(evt);
            }
        });
        getContentPane().add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 400, 120, 50));

        deleteButton.setBackground(new java.awt.Color(0, 0, 0));
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Sil");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 400, 120, 50));

        kaydetButton.setBackground(new java.awt.Color(0, 0, 0));
        kaydetButton.setForeground(new java.awt.Color(255, 255, 255));
        kaydetButton.setText("Kaydet");
        kaydetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kaydetButtonMouseClicked(evt);
            }
        });
        getContentPane().add(kaydetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 340, 120, 50));

        updateButton.setBackground(new java.awt.Color(0, 0, 0));
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Güncelle");
        updateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateButtonMouseClicked(evt);
            }
        });
        getContentPane().add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 340, 120, 50));

        turnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        turnBack.setText("<---");
        turnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                turnBackMouseClicked(evt);
            }
        });
        getContentPane().add(turnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 600, 80, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/adminBackg.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, 640));

        jMenu1.setBackground(new java.awt.Color(255, 255, 255));
        jMenu1.setText("Albüm Düzenle");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setBackground(new java.awt.Color(255, 255, 255));
        jMenu2.setText("Şarkı Düzenle");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setBackground(new java.awt.Color(255, 255, 255));
        jMenu3.setText("Sanatçı Düzenle");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>                        


    private void resetButtonMouseClicked(java.awt.event.MouseEvent evt) {                                         

        sanatciAd.setText("");
        sanatciCountry.setText("");
    }                                        

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {                                          
        PreparedStatement ps = null;

        try {
            int row = table.getSelectedRow();
            String value = (table.getModel().getValueAt(row, 0).toString());
            String Query = "DELETE FROM author WHERE authorid=" + value;

            ps = connection.connect().prepareStatement(Query);

            ps.executeUpdate();
            if (ps.executeUpdate() > 1) {
                JOptionPane.showMessageDialog(null, "SANATCI SILINDI");
            }

            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showSanatci();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();
            } catch (Exception e) {

            }
        }
    }                                         

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {                                   
        int i = table.getSelectedRow();
        TableModel model = table.getModel();
        sanatciAd.setText(model.getValueAt(i, 1).toString());
        sanatciCountry.setText(model.getValueAt(i, 2).toString());
    }                                  

    private void kaydetButtonMouseClicked(java.awt.event.MouseEvent evt) {                                          
        PreparedStatement ps = null;
        try {
            String Query = "INSERT INTO author(authorName,authorCountry)VALUES(?,?)";
            ps = connection.connect().prepareStatement(Query);

            ps.setString(1, sanatciAd.getText());
            ps.setString(2, sanatciCountry.getText());

            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "SANATCI EKLENDİ");

            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showSanatci();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();
            } catch (Exception e) {

            }
        }
    }                                         

    private void updateButtonMouseClicked(java.awt.event.MouseEvent evt) {                                          
        PreparedStatement ps = null;
        try {
            int row = table.getSelectedRow();
            String value = (table.getModel().getValueAt(row, 0).toString());
            String Query = "UPDATE author SET authorName=?,authorCountry=? WHERE authorid =" + value;
            ps = connection.connect().prepareStatement(Query);

            ps.setString(1, sanatciAd.getText());
            ps.setString(2, sanatciCountry.getText());


            ps.executeUpdate();
            if (ps.executeUpdate() > 1) {
                JOptionPane.showMessageDialog(null, "SANATCİ GUNCELLENDİ");
            }

            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showSanatci();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();
            } catch (Exception e) {

            }
        }
    }                                         

    private void turnBackMouseClicked(java.awt.event.MouseEvent evt) {                                      
        new adminPanel().setVisible(true);
        this.setVisible(false);
    }                                     

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {                                    
        new adminMainPageAlbum().setVisible(true);
        this.setVisible(false);
    }                                   

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {                                    
        new adminMainPageSarki().setVisible(true);
        this.setVisible(false);
    }                                   

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {                                    
        // TODO add your handling code here:
    }                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminMainPageSanatci.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminMainPageSanatci.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminMainPageSanatci.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminMainPageSanatci.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminMainPageSanatci().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kaydetButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextField sanatciAd;
    private javax.swing.JTextField sanatciCountry;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JButton turnBack;
    private javax.swing.JButton updateButton;
    // End of variables declaration                   

    @Override
    public void tableChanged(TableModelEvent tme) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
*********************************************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Arthas
 */
public class adminMainPageSarki extends javax.swing.JFrame implements TableModelListener {

    /**
     * Creates new form adminMainPage
     */
    public adminMainPageSarki() {
        initComponents();
        showSongs();
    }

    public ArrayList<AramaSarki> sarkiList() {
        ArrayList<AramaSarki> sarkiList = new ArrayList<>();
        Statement st = null;
        ResultSet rs = null;
        try {
            st = connection.connect().createStatement();
            String searchQuery = "SELECT * FROM 'songs'";
            rs = st.executeQuery(searchQuery);
            AramaSarki aramaSarki;
            while (rs.next()) {
                aramaSarki = new AramaSarki(
                        rs.getInt("songsid"),
                        rs.getString("songsName"),
                        rs.getString("songsDate"),
                        rs.getString("songsAuthor"),
                        rs.getString("songsAlbum"),
                        rs.getString("songsType"),
                        rs.getInt("songsTime"),
                        rs.getInt("songsCount")
                );
                sarkiList.add(aramaSarki);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                st.close();
            } catch (Exception e) {

            }
        }

        return sarkiList;
    }

    private void showSongs() {
        ArrayList<AramaSarki> sonuc = sarkiList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[8];

        for (int i = 0; i < sonuc.size(); i++) {
            row[0] = sonuc.get(i).getSongsid();
            row[1] = sonuc.get(i).getSongsName();
            row[2] = sonuc.get(i).getSongsDate();
            row[3] = sonuc.get(i).getSongsAuthor();
            row[4] = sonuc.get(i).getSongsAlbum();
            row[5] = sonuc.get(i).getSongsType();
            row[6] = sonuc.get(i).getSongsTime();
            row[7] = sonuc.get(i).getSongsCount();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        scrollPane1 = new java.awt.ScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        sarkiSure = new javax.swing.JTextField();
        sarkiAd = new javax.swing.JTextField();
        sarkiTarih = new javax.swing.JTextField();
        sarkiYazar = new javax.swing.JTextField();
        sarkiAlbum = new javax.swing.JTextField();
        jLAbel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        resetButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        kaydetButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        turnBack = new javax.swing.JButton();
        sarkiDinlenme = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        sarkiTuru = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Şarkı ID", "Şarkı Ismi", "Tarih", "Sanatçı", "Albüm", "Tür", "Süre", "Dinlenme Sayısı"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        scrollPane1.add(jScrollPane1);

        getContentPane().add(scrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 540, 560));
        getContentPane().add(sarkiSure, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 280, 210, 40));
        getContentPane().add(sarkiAd, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, 190, 40));
        getContentPane().add(sarkiTarih, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 90, 210, 40));
        getContentPane().add(sarkiYazar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 190, 190, 40));
        getContentPane().add(sarkiAlbum, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 190, 210, 40));

        jLAbel.setForeground(new java.awt.Color(255, 255, 255));
        jLAbel.setText("Süre:");
        getContentPane().add(jLAbel, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 240, 190, 30));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Şarkı Adı:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 50, 170, 30));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tarih");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 50, 200, 30));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Sanatçı:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, 180, 30));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Albüm:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 160, 210, 30));

        resetButton.setBackground(new java.awt.Color(0, 0, 0));
        resetButton.setForeground(new java.awt.Color(255, 255, 255));
        resetButton.setText("Temizle");
        resetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetButtonMouseClicked(evt);
            }
        });
        getContentPane().add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 530, 120, 50));

        deleteButton.setBackground(new java.awt.Color(0, 0, 0));
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Sil");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 530, 110, 50));

        kaydetButton.setBackground(new java.awt.Color(0, 0, 0));
        kaydetButton.setForeground(new java.awt.Color(255, 255, 255));
        kaydetButton.setText("Kaydet");
        kaydetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kaydetButtonMouseClicked(evt);
            }
        });
        getContentPane().add(kaydetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 460, 120, 50));

        updateButton.setBackground(new java.awt.Color(0, 0, 0));
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Güncelle");
        updateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateButtonMouseClicked(evt);
            }
        });
        getContentPane().add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 460, 110, 50));

        turnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        turnBack.setText("<---");
        turnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                turnBackMouseClicked(evt);
            }
        });
        getContentPane().add(turnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 600, 80, -1));
        getContentPane().add(sarkiDinlenme, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 370, 200, 40));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Dinlenme Sayısı:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 330, 190, 30));
        getContentPane().add(sarkiTuru, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 280, 190, 40));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Türü:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 250, 190, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/adminBackg.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, 640));

        jMenu1.setBackground(new java.awt.Color(255, 255, 255));
        jMenu1.setText("Albüm Düzenle");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setBackground(new java.awt.Color(255, 255, 255));
        jMenu2.setText("Şarkı Düzenle");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setBackground(new java.awt.Color(255, 255, 255));
        jMenu3.setText("Sanatçı Düzenle");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>                        


    private void resetButtonMouseClicked(java.awt.event.MouseEvent evt) {                                         

        sarkiAd.setText("");
        sarkiTarih.setText("");
        sarkiYazar.setText("");
        sarkiAlbum.setText("");
        sarkiTuru.setText("");
        sarkiSure.setText("");
        sarkiDinlenme.setText("");
    }                                        

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {                                          
        PreparedStatement ps = null;

        try {
            int row = table.getSelectedRow();
            String value = (table.getModel().getValueAt(row, 0).toString());
            String Query = "DELETE FROM songs WHERE songsid=" + value;

            ps = connection.connect().prepareStatement(Query);

            ps.executeUpdate();
            if (ps.executeUpdate() > 1) {
                JOptionPane.showMessageDialog(null, "SARKI SILINDI");
            }

            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showSongs();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();
            } catch (Exception e) {

            }
        }
    }                                         

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {                                   
        int i = table.getSelectedRow();
        TableModel model = table.getModel();
        sarkiAd.setText(model.getValueAt(i, 1).toString());
        sarkiTarih.setText(model.getValueAt(i, 2).toString());
        sarkiYazar.setText(model.getValueAt(i, 3).toString());
        sarkiAlbum.setText(model.getValueAt(i, 4).toString());
        sarkiTuru.setText(model.getValueAt(i, 5).toString());
        sarkiSure.setText(model.getValueAt(i, 6).toString());
        sarkiDinlenme.setText(model.getValueAt(i, 7).toString());
    }                                  

    private void kaydetButtonMouseClicked(java.awt.event.MouseEvent evt) {                                          
        PreparedStatement ps = null;
        try {
            String Query = "INSERT INTO songs(songsName,songsDate,songsAuthor,songsAlbum,songsType,songsTime,songsCount)VALUES(?,?,?,?,?,?,?)";
            ps = connection.connect().prepareStatement(Query);

            ps.setString(1, sarkiAd.getText());
            ps.setString(2, sarkiTarih.getText());
            ps.setString(3, sarkiYazar.getText());
            ps.setString(4, sarkiAlbum.getText());
            ps.setString(5, sarkiTuru.getText());
            ps.setString(6, sarkiSure.getText());
            ps.setString(7, sarkiDinlenme.getText());

            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "SARKI EKLENDİ");

            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showSongs();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();
            } catch (Exception e) {

            }
        }
    }                                         

    private void updateButtonMouseClicked(java.awt.event.MouseEvent evt) {                                          
        PreparedStatement ps = null;
        try {
            int row = table.getSelectedRow();
            String value = (table.getModel().getValueAt(row, 0).toString());
            String Query = "UPDATE songs SET songsName=?,songsDate=?,songsAuthor=?,songsAlbum=?,songsType=? ,songsTime=?,songsCount=? WHERE songsid =" + value;
            ps = connection.connect().prepareStatement(Query);

            ps.setString(1, sarkiAd.getText());
            ps.setString(2, sarkiTarih.getText());
            ps.setString(3, sarkiYazar.getText());
            ps.setString(4, sarkiAlbum.getText());
            ps.setString(5, sarkiTuru.getText());
            ps.setString(6, sarkiSure.getText());
            ps.setString(7, sarkiDinlenme.getText());

            ps.executeUpdate();
            if (ps.executeUpdate() > 1) {
                JOptionPane.showMessageDialog(null, "SARKI GUNCELLENDİ");
            }

            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showSongs();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();
            } catch (Exception e) {

            }
        }
    }                                         

    private void turnBackMouseClicked(java.awt.event.MouseEvent evt) {                                      
        new adminPanel().setVisible(true);
        this.setVisible(false);
    }                                     

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {                                    
        new adminMainPageAlbum().setVisible(true);
        this.setVisible(false);
    }                                   

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {                                    
        
    }                                   

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {                                    
        new adminMainPageSanatci().setVisible(true);
        this.setVisible(false);
    }                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminMainPageSarki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminMainPageSarki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminMainPageSarki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminMainPageSarki.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminMainPageSarki().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLAbel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kaydetButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JTextField sarkiAd;
    private javax.swing.JTextField sarkiAlbum;
    private javax.swing.JTextField sarkiDinlenme;
    private javax.swing.JTextField sarkiSure;
    private javax.swing.JTextField sarkiTarih;
    private javax.swing.JTextField sarkiTuru;
    private javax.swing.JTextField sarkiYazar;
    private java.awt.ScrollPane scrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JButton turnBack;
    private javax.swing.JButton updateButton;
    // End of variables declaration                   

    @Override
    public void tableChanged(TableModelEvent tme) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
*******************************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Arthas
 */
public class adminPanel extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public adminPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        adminSignNickNameText = new javax.swing.JTextField();
        adminSignEmailText = new javax.swing.JTextField();
        adminSignButton = new javax.swing.JButton();
        adminInfoLabel2 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        adminTurnBack = new javax.swing.JButton();
        adminSignPasswordText = new javax.swing.JPasswordField();
        adminBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("adminGiris/Kayit");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(adminSignNickNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 202, 50));
        getContentPane().add(adminSignEmailText, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 370, 202, 46));

        adminSignButton.setBackground(new java.awt.Color(0, 0, 0));
        adminSignButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        adminSignButton.setForeground(new java.awt.Color(255, 255, 255));
        adminSignButton.setText("Sign Up");
        adminSignButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminSignButtonMouseClicked(evt);
            }
        });
        getContentPane().add(adminSignButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 540, 140, 60));

        adminInfoLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        adminInfoLabel2.setText("Düzenleme Yapmak İçin Giriş Yapın");
        getContentPane().add(adminInfoLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 340, 80));

        jLabel20.setText(":NickName");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 80, -1));

        jLabel21.setText(":Email");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 80, -1));

        jLabel22.setText(":Password");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 80, -1));

        adminTurnBack.setBackground(new java.awt.Color(0, 0, 0));
        adminTurnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        adminTurnBack.setForeground(new java.awt.Color(255, 255, 255));
        adminTurnBack.setText("<---");
        adminTurnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminTurnBackMouseClicked(evt);
            }
        });
        getContentPane().add(adminTurnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 590, -1, -1));
        getContentPane().add(adminSignPasswordText, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 450, 200, 50));

        adminBackground.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        adminBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/40-402293_rock-nroll-vector-logo-rock-an-roll.png"))); // NOI18N
        getContentPane().add(adminBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 630));

        pack();
    }// </editor-fold>                        


    private void adminSignButtonMouseClicked(java.awt.event.MouseEvent evt) {                                             
        PreparedStatement ps = null;
        ResultSet rs = null;
        Connection con=connection.connect();       
        String signNickName;
        String signEmail;
        String signPassword;

        signNickName = adminSignNickNameText.getText();
        signEmail = adminSignEmailText.getText();
        signPassword = String.valueOf(adminSignPasswordText.getPassword());

        String query = "SELECT * FROM admin WHERE adminNickName=? AND adminEmail=? AND adminPassword=?";

        try {
            ps = con.prepareStatement(query);

            ps.setString(1, signNickName);
            ps.setString(2, signEmail);
            ps.setString(3, signPassword);
            
            adminMainPageAlbum ap = new adminMainPageAlbum();
            rs = ps.executeQuery();
            if (rs.next()) { 
                ap.setVisible(true);
                ap.pack();
                ap.setLocationRelativeTo(null);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "YANLIS MAIL ADRESİ YA DA PAROLA", "GIRIS BASARISIZ", 2);
            }
        } catch (Exception ex) {
            Logger.getLogger(adminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                ps.close();
                rs.close();
                con.close();
            } catch (Exception ex) {
               
            }

        }


    }                                            

    private void adminTurnBackMouseClicked(java.awt.event.MouseEvent evt) {                                           
        new usersOradmin().setVisible(true);
        this.setVisible(false);
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel adminBackground;
    private javax.swing.JLabel adminInfoLabel2;
    private javax.swing.JButton adminSignButton;
    private javax.swing.JTextField adminSignEmailText;
    private javax.swing.JTextField adminSignNickNameText;
    private javax.swing.JPasswordField adminSignPasswordText;
    private javax.swing.JButton adminTurnBack;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    // End of variables declaration                   

}
**********************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

/**
 *
 * @author Arthas
 */
public class connection {
   

    public static Connection connect() { 
        Connection con=null;
        try {
            Class.forName("org.sqlite.JDBC");
            con = DriverManager.getConnection("jdbc:sqlite:src/sqLite/songs1.db");
        } catch (SQLException ex) {
            ex.printStackTrace();
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        }
        return con;
    }   
}
***********************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *
 * @author Arthas
 */
public class userMainPage extends javax.swing.JFrame implements TableModelListener {
     String kullanıcıadi;
    static userPanel isim=new userPanel();
       
    /**
     * Creates new form userMainPage
     */
    public userMainPage() {  
        kullanıcıadi = isim.getKullanıcıAdi();
        
        initComponents();
        showAlbums();
       // System.out.println(showUyeTipi());
    }
    private ArrayList<UyelikArama> uyelikTipi(){
        ArrayList<UyelikArama> UyeList = new ArrayList<>();
        Statement st = null;
        ResultSet rs = null;
         try {
            st = connection.connect().createStatement();
            String searchQuery = "SELECT * FROM 'users'";
            rs = st.executeQuery(searchQuery);
            UyelikArama arama;
            while (rs.next()) {
                
                arama = new UyelikArama( 
                        rs.getInt("usersSubscription"),
                        rs.getString("usersNickName")
                        
                );
                UyeList.add(arama);
            }
        

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                st.close();
            } catch (Exception e) {

            }
        }
         
        return UyeList;
    }
    private int showUyeTipi(){
        int a = 0;
        ArrayList<UyelikArama> sonuc= uyelikTipi();
        for (int i = 0; i < sonuc.size(); i++) {
        if(sonuc.get(i).getUyelikAdi() == null ? isim.getKullanıcıAdi() == null : sonuc.get(i).getUyelikAdi().equals(isim.getKullanıcıAdi()))
        {
             a= sonuc.get(i).getUyelikTipi();
        }
        }
        return a;
    }
        
    
    public ArrayList<Arama> albumList() {
        ArrayList<Arama> albumList = new ArrayList<>();
        Statement st = null;
        ResultSet rs = null;
        try {
            st = connection.connect().createStatement();
            String searchQuery = "SELECT * FROM 'album'";
            rs = st.executeQuery(searchQuery);
            Arama arama;
            while (rs.next()) {
                arama = new Arama(
                        rs.getInt("albumid"),
                        rs.getString("albumName"),
                        rs.getString("albumAuthor"),
                        rs.getString("albumSong"),
                        rs.getString("albumType"),
                        rs.getString("albumDate"),
                        rs.getInt("albumcount")
                );
                albumList.add(arama);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                st.close();
            } catch (Exception e) {

            }
        }

        return albumList;
    }

    private void showAlbums() {
        ArrayList<Arama> sonuc = albumList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < sonuc.size(); i++) {
            row[0] = sonuc.get(i).getAlbumid();
            row[1] = sonuc.get(i).getAlbumName();
            row[2] = sonuc.get(i).getAlbumAuthor();
            row[3] = sonuc.get(i).getAlbumSong();
            row[4] = sonuc.get(i).getAlbumType();
            row[5] = sonuc.get(i).getAlbumDate();
            row[6] = sonuc.get(i).getAlbumCount();
            model.addRow(row);
        }
    }

       
     
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        PlaylistEkle = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        tüm = new javax.swing.JMenu();
        playlist = new javax.swing.JMenu();
        others = new javax.swing.JMenu();
        top10 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(800, 525));
        setPreferredSize(new java.awt.Dimension(800, 525));
        setSize(new java.awt.Dimension(800, 525));

        jPanel1.setMinimumSize(new java.awt.Dimension(800, 500));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 500));

        PlaylistEkle.setText("Ekle");
        PlaylistEkle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PlaylistEkleMouseClicked(evt);
            }
        });
        PlaylistEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaylistEkleActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Albüm ID","Albüm Adı", "Şarkıcı", "Şarkı", "Tür", "Çıkış Tarihi","Din. Sayısı"
            }
        ));
        jScrollPane1.setViewportView(table);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guitar.jpg"))); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("<---");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PlaylistEkle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1)
                        .addGap(29, 29, 29)
                        .addComponent(PlaylistEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        tüm.setText("Tüm Şarkılar");
        jMenuBar1.add(tüm);

        playlist.setText("Çalma Listelerim");
        playlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playlistMouseClicked(evt);
            }
        });
        jMenuBar1.add(playlist);

        others.setText("Diğer Kullanıcılar");
        others.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                othersMouseClicked(evt);
            }
        });
        jMenuBar1.add(others);

        top10.setText("Top 10");
        top10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                top10MouseClicked(evt);
            }
        });
        jMenuBar1.add(top10);

        setJMenuBar(jMenuBar1);
        jMenuBar1.getAccessibleContext().setAccessibleParent(this);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.getAccessibleContext().setAccessibleParent(jPanel1);

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>                        

    private void playlistMouseClicked(java.awt.event.MouseEvent evt) {                                      
        new userPlaylist().setVisible(true);
        this.setVisible(false);
    }                                     

    private void PlaylistEkleMouseClicked(java.awt.event.MouseEvent evt) {                                          
        
        PreparedStatement ps = null;
        try {
            String Query = "INSERT INTO 'playlist'('playlistsahibi','playlistalbumadi','playlistsarkici','playlistadi','playlistturu','playlistçıkıs','playlistdinleme')VALUES(?,?,?,?,?,?,?)";
            ps = connection.connect().prepareStatement(Query);
            int i = table.getSelectedRow();
            TableModel model = table.getModel();
            ps.setString(1,isim.getKullanıcıAdi());
            ps.setString(2, model.getValueAt(i, 1).toString());
            ps.setString(3, model.getValueAt(i, 2).toString());
            ps.setString(4, model.getValueAt(i, 3).toString());
            ps.setString(5, model.getValueAt(i, 4).toString());
            ps.setString(6, model.getValueAt(i, 5).toString());
            ps.setString(7, model.getValueAt(i, 6).toString());
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "ALBUM EKLENDİ");

           
            
           

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();
                
            } catch (Exception e) {

            }
        }
    }                                         

    private void PlaylistEkleActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void othersMouseClicked(java.awt.event.MouseEvent evt) {                                    
         new userOthers().setVisible(true);
        this.setVisible(false);
    }                                   

    private void top10MouseClicked(java.awt.event.MouseEvent evt) {                                   
         new userTop10().setVisible(true);
        this.setVisible(false);
    }                                  

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                      
        new userPanel().setVisible(true);
        this.setVisible(false);
    }                                     

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
       
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userMainPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userMainPage().setVisible(true);
                
            }
        });
        
        
       
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton PlaylistEkle;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu others;
    private javax.swing.JMenu playlist;
    private javax.swing.JTable table;
    private javax.swing.JMenu top10;
    private javax.swing.JMenu tüm;
    // End of variables declaration                   

    @Override
    public void tableChanged(TableModelEvent tme) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    
}
*********************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static songsfile.userMainPage.isim;
import static songsfile.userPlaylist.isim;

/**
 *
 * @author UMUT
 */
public class userOthers extends javax.swing.JFrame implements TableModelListener {

    static private String kullanıcıadi;
    static userPanel isim2 = new userPanel();

    public  String getKullanıcıadi() {
        return kullanıcıadi;
    }
     
    /**
     * Creates new form userOthers
     */
    public userOthers() {
       
        initComponents();
      
    }

    private ArrayList<UyelikArama> uyelikTipi() {
        ArrayList<UyelikArama> UyeList = new ArrayList<>();
        Statement st = null;
        ResultSet rs = null;
        try {
            st = connection.connect().createStatement();
            String searchQuery = "SELECT * FROM 'users'";
            rs = st.executeQuery(searchQuery);
            UyelikArama arama;
            while (rs.next()) {

                arama = new UyelikArama(
                        rs.getInt("usersid"),
                        rs.getInt("usersSubscription"),
                        rs.getString("usersNickName")
                );
                UyeList.add(arama);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                st.close();
            } catch (Exception e) {

            }
        }

        return UyeList;
    }

    private void showUyeList() {
        ArrayList<UyelikArama> sonuc = uyelikTipi();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[2];

        for (int i = 0; i < sonuc.size(); i++) {
            if (sonuc.get(i).getUyelikTipi() == 1) {
                if (sonuc.get(i).getUyelikAdi() == null ? isim2.getKullanıcıAdi() != null : !sonuc.get(i).getUyelikAdi().equals(isim2.getKullanıcıAdi())) {
                    row[0] = sonuc.get(i).getUyelikId();
                    row[1] = sonuc.get(i).getUyelikAdi();
                    model.addRow(row);

                }

            }

        }
    }

    private ArrayList<TakipArama> uyelikTakip() {
        ArrayList<TakipArama> TakipList = new ArrayList<>();
        Statement st = null;
        ResultSet rs = null;
        try {
            st = connection.connect().createStatement();
            String searchQuery = "SELECT * FROM 'takiplistesi'";
            rs = st.executeQuery(searchQuery);
            TakipArama arama;
            while (rs.next()) {

                arama = new TakipArama(
                        rs.getInt("kullanıcıtakipid"),
                        rs.getString("kullanıcıadi"),
                        rs.getString("kullanıcıtakip")
                );
                TakipList.add(arama);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                st.close();
            } catch (Exception e) {

            }
        }

        return TakipList;
    }

    private void showtakipList() {
        ArrayList<TakipArama> sonuc = uyelikTakip();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[2];

        for (int i = 0; i < sonuc.size(); i++) {
            if(sonuc.get(i).getKullanıcıadi() == null ? isim2.getKullanıcıAdi() == null : sonuc.get(i).getKullanıcıadi().equals(isim2.getKullanıcıAdi())){
            row[0] = sonuc.get(i).getKullanıcıid();
            row[1] = sonuc.get(i).getKullanıcıtakip();
            model.addRow(row);
            }
            

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        kullanıcısec = new javax.swing.JButton();
        Takipet = new javax.swing.JButton();
        Takiptencıkar = new javax.swing.JButton();
        Hepsi = new javax.swing.JRadioButton();
        Takip = new javax.swing.JRadioButton();
        görüntüle = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        usermain = new javax.swing.JMenu();
        playlist = new javax.swing.JMenu();
        others = new javax.swing.JMenu();
        top10 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 525));
        setMinimumSize(new java.awt.Dimension(800, 525));
        setPreferredSize(new java.awt.Dimension(800, 525));
        setSize(new java.awt.Dimension(800, 525));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Kullanıcı ID","Kullanıcı İsmi"
            }
        ));
        jScrollPane1.setViewportView(table);

        kullanıcısec.setText("Çalma Listesini Göster");
        kullanıcısec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kullanıcısecMouseClicked(evt);
            }
        });
        kullanıcısec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kullanıcısecActionPerformed(evt);
            }
        });

        Takipet.setText("Takip et");
        Takipet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TakipetMouseClicked(evt);
            }
        });

        Takiptencıkar.setText("Takipten çıkar");
        Takiptencıkar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TakiptencıkarMouseClicked(evt);
            }
        });

        buttonGroup1.add(Hepsi);
        Hepsi.setText("Bütün kullanıcılar");

        buttonGroup1.add(Takip);
        Takip.setText("Takip ettiklerin");

        görüntüle.setText("Görüntüle");
        görüntüle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                görüntüleMouseClicked(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("<---");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        usermain.setText("Tüm Şarkılar");
        usermain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usermainMouseClicked(evt);
            }
        });
        jMenuBar1.add(usermain);

        playlist.setText("Çalma Listelerim");
        playlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playlistMouseClicked(evt);
            }
        });
        jMenuBar1.add(playlist);

        others.setText("Diğer Kullanıcılar");
        others.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                othersMouseClicked(evt);
            }
        });
        jMenuBar1.add(others);

        top10.setText("Top 10");
        top10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                top10MouseClicked(evt);
            }
        });
        jMenuBar1.add(top10);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kullanıcısec)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Takipet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(görüntüle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Hepsi)
                        .addComponent(Takip)
                        .addComponent(Takiptencıkar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(Hepsi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Takip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(görüntüle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Takipet, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Takiptencıkar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kullanıcısec, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(89, 89, 89)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>                        

    private void kullanıcısecActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void usermainMouseClicked(java.awt.event.MouseEvent evt) {                                      
        new userMainPage().setVisible(true);
        this.setVisible(false);
    }                                     

    private void playlistMouseClicked(java.awt.event.MouseEvent evt) {                                      
        new userPlaylist().setVisible(true);
        this.setVisible(false);
    }                                     

    private void othersMouseClicked(java.awt.event.MouseEvent evt) {                                    
        new userOthers().setVisible(true);
        this.setVisible(false);
    }                                   

    private void top10MouseClicked(java.awt.event.MouseEvent evt) {                                   
        new userTop10().setVisible(true);
        this.setVisible(false);
    }                                  

    private void kullanıcısecMouseClicked(java.awt.event.MouseEvent evt) {                                          
        PreparedStatement ps = null;
        try {

            int i = table.getSelectedRow();
            TableModel model = table.getModel();

            kullanıcıadi = table.getValueAt(i, 1).toString();
            new userOthersSec().setVisible(true);
            this.setVisible(false);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();

            } catch (Exception e) {

            }
        }
    }                                         

    private void görüntüleMouseClicked(java.awt.event.MouseEvent evt) {                                       
        if (Hepsi.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showUyeList();
            Takipet.setVisible(true);
            Takiptencıkar.setVisible(false);
        }
        if (Takip.isSelected()) {
             DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showtakipList();
            Takipet.setVisible(false);
            Takiptencıkar.setVisible(true);
        }
    }                                      

    private void TakipetMouseClicked(java.awt.event.MouseEvent evt) {                                     
         PreparedStatement ps = null;
        try {
            String Query = "INSERT INTO 'takiplistesi'('kullanıcıadi','kullanıcıtakip')VALUES(?,?)";
            ps = connection.connect().prepareStatement(Query);
            int i = table.getSelectedRow();
            TableModel model = table.getModel();
            ps.setString(1,isim2.getKullanıcıAdi());
            ps.setString(2, model.getValueAt(i, 1).toString());
         
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "TAKİP LİSTESİNE EKLENDİ");

           
            
           

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();
                
            } catch (Exception e) {

            }
        }
    }                                    

    private void TakiptencıkarMouseClicked(java.awt.event.MouseEvent evt) {                                           
        ArrayList<TakipArama> sonuc = uyelikTakip();
        PreparedStatement ps = null;
           try {
            
            
           for(int i=0;i<sonuc.size();i++)
           {   
               if(sonuc.get(i).getKullanıcıadi()== null ? isim2.getKullanıcıAdi() == null : sonuc.get(i).getKullanıcıadi().equals(isim2.getKullanıcıAdi())){ 
            //    System.out.println(value);
            int row = table.getSelectedRow();
            String value = (table.getModel().getValueAt(row, 0).toString());
            String Query = "DELETE  FROM takiplistesi WHERE kullanıcıtakipid=" +value;
            ps = connection.connect().prepareStatement(Query);  
            ps.executeUpdate();
            if (ps.executeUpdate() > 1) {
                JOptionPane.showMessageDialog(null, "TAKİPTEN CIKARILDI");
            }    
            }
            }


            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            if (Hepsi.isSelected()) {
                showUyeList();
            } else if (Takip.isSelected()) {
                showtakipList();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();
            } catch (Exception e) {

            }
        }
     
    }                                          

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                      
       new userPanel().setVisible(true);
        this.setVisible(false);
    }                                     
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userOthers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userOthers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userOthers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userOthers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userOthers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JRadioButton Hepsi;
    private javax.swing.JRadioButton Takip;
    private javax.swing.JButton Takipet;
    private javax.swing.JButton Takiptencıkar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton görüntüle;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kullanıcısec;
    private javax.swing.JMenu others;
    private javax.swing.JMenu playlist;
    private javax.swing.JTable table;
    private javax.swing.JMenu top10;
    private javax.swing.JMenu usermain;
    // End of variables declaration                   

    @Override
    public void tableChanged(TableModelEvent tme) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
**********************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static songsfile.userMainPage.isim;
import static songsfile.userPlaylist.isim;

/**
 *
 * @author UMUT
 */
public class userOthersSec extends javax.swing.JFrame implements TableModelListener {

    static userOthers isim = new userOthers();
    static userPanel isim2 = new userPanel();

    /**
     * Creates new form userOthersSec
     */
    public userOthersSec() {

        initComponents();
    }

    public ArrayList<PlaylistArama> playList() {
        ArrayList<PlaylistArama> playList = new ArrayList<>();
        Statement st = null;
        ResultSet rs = null;
        try {
            st = connection.connect().createStatement();
            String searchQuery = "SELECT * FROM 'playlist'";
            rs = st.executeQuery(searchQuery);
            PlaylistArama arama;
            while (rs.next()) {
                arama = new PlaylistArama(
                        rs.getInt("playlistid"),
                        rs.getString("playlistsahibi"),
                        rs.getString("playlistalbumadi"),
                        rs.getString("playlistsarkici"),
                        rs.getString("playlistadi"),
                        rs.getString("playlistturu"),
                        rs.getString("playlistçıkıs"),
                        rs.getInt("playlistdinleme")
                );
                playList.add(arama);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                st.close();
            } catch (Exception e) {

            }
        }

        return playList;
    }

    private void showPlaylists() {

        ArrayList<PlaylistArama> sonuc = playList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];
        for (int i = 0; i < sonuc.size(); i++) {
            if (sonuc.get(i).getPlaylistSahibi() == null ? isim.getKullanıcıadi() == null : sonuc.get(i).getPlaylistSahibi().equals(isim.getKullanıcıadi())) {
                row[0] = sonuc.get(i).getPlaylistId();
                row[1] = sonuc.get(i).getPlaylistAlbumAdi();
                row[2] = sonuc.get(i).getPlaylistSarkici();
                row[3] = sonuc.get(i).getPlaylistAdi();
                row[4] = sonuc.get(i).getPlaylistTuru();
                row[5] = sonuc.get(i).getPlaylistCıkıs();
                row[6] = sonuc.get(i).getPlaylistdinleme();
                model.addRow(row);

            }

        }
    }

    private void showJazzlists() {

        ArrayList<PlaylistArama> sonuc = playList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < sonuc.size(); i++) {
            if ("Jazz".equals(sonuc.get(i).getPlaylistTuru())) {
                if (sonuc.get(i).getPlaylistSahibi() == null ? isim.getKullanıcıadi() == null : sonuc.get(i).getPlaylistSahibi().equals(isim.getKullanıcıadi())) {
                    row[0] = sonuc.get(i).getPlaylistId();
                    row[1] = sonuc.get(i).getPlaylistAlbumAdi();
                    row[2] = sonuc.get(i).getPlaylistSarkici();
                    row[3] = sonuc.get(i).getPlaylistAdi();
                    row[4] = sonuc.get(i).getPlaylistTuru();
                    row[5] = sonuc.get(i).getPlaylistCıkıs();
                    row[6] = sonuc.get(i).getPlaylistdinleme();
                    model.addRow(row);
                }
            }

        }
    }

    private void showPoplists() {

        ArrayList<PlaylistArama> sonuc = playList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < sonuc.size(); i++) {
            if ("Pop".equals(sonuc.get(i).getPlaylistTuru())) {
                if (sonuc.get(i).getPlaylistSahibi() == null ? isim.getKullanıcıadi() == null : sonuc.get(i).getPlaylistSahibi().equals(isim.getKullanıcıadi())) {
                    row[0] = sonuc.get(i).getPlaylistId();
                    row[1] = sonuc.get(i).getPlaylistAlbumAdi();
                    row[2] = sonuc.get(i).getPlaylistSarkici();
                    row[3] = sonuc.get(i).getPlaylistAdi();
                    row[4] = sonuc.get(i).getPlaylistTuru();
                    row[5] = sonuc.get(i).getPlaylistCıkıs();
                    row[6] = sonuc.get(i).getPlaylistdinleme();
                    model.addRow(row);
                }
            }

        }
    }

    private void showKlasiklists() {

        ArrayList<PlaylistArama> sonuc = playList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < sonuc.size(); i++) {
            if (sonuc.get(i).getPlaylistSahibi() == null ? isim.getKullanıcıadi() == null : sonuc.get(i).getPlaylistSahibi().equals(isim.getKullanıcıadi())) {
                if ("Klasik".equals(sonuc.get(i).getPlaylistTuru())) {

                    row[0] = sonuc.get(i).getPlaylistId();
                    row[1] = sonuc.get(i).getPlaylistAlbumAdi();
                    row[2] = sonuc.get(i).getPlaylistSarkici();
                    row[3] = sonuc.get(i).getPlaylistAdi();
                    row[4] = sonuc.get(i).getPlaylistTuru();
                    row[5] = sonuc.get(i).getPlaylistCıkıs();
                    row[6] = sonuc.get(i).getPlaylistdinleme();
                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        ekle = new javax.swing.JButton();
        othersbutton = new javax.swing.JButton();
        Hepsi = new javax.swing.JRadioButton();
        Jazz = new javax.swing.JRadioButton();
        Klasik = new javax.swing.JRadioButton();
        Pop = new javax.swing.JRadioButton();
        görüntüle = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        tüm = new javax.swing.JMenu();
        playlist = new javax.swing.JMenu();
        others = new javax.swing.JMenu();
        top10 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 525));
        setPreferredSize(new java.awt.Dimension(800, 525));
        setSize(new java.awt.Dimension(800, 525));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Albüm ID", "Albüm Adı", "Şarkıcı", "Şarkı","Çıkış Tarihi", "Tür","Dinlenme Sayısı"
            }
        ));
        jScrollPane1.setViewportView(table);

        ekle.setText("Çalma Listene ekle");
        ekle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ekleMouseClicked(evt);
            }
        });

        othersbutton.setText("Kullanıcıları Görüntüle");
        othersbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                othersbuttonMouseClicked(evt);
            }
        });
        othersbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                othersbuttonActionPerformed(evt);
            }
        });

        buttonGroup1.add(Hepsi);
        Hepsi.setText("hepsi");
        Hepsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HepsiActionPerformed(evt);
            }
        });

        buttonGroup1.add(Jazz);
        Jazz.setText("Jazz");
        Jazz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JazzActionPerformed(evt);
            }
        });

        buttonGroup1.add(Klasik);
        Klasik.setText("Klasik");
        Klasik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KlasikActionPerformed(evt);
            }
        });

        buttonGroup1.add(Pop);
        Pop.setText("Pop");

        görüntüle.setText("görüntüle");
        görüntüle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                görüntüleMouseClicked(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("<---");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tüm.setText("Tüm Şarkılar");
        tüm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tümMouseClicked(evt);
            }
        });
        jMenuBar1.add(tüm);

        playlist.setText("Çalma Listelerim");
        playlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playlistMouseClicked(evt);
            }
        });
        jMenuBar1.add(playlist);

        others.setText("Diğer Kullanıcılar");
        others.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                othersMouseClicked(evt);
            }
        });
        jMenuBar1.add(others);

        top10.setText("Top 10");
        top10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                top10MouseClicked(evt);
            }
        });
        jMenuBar1.add(top10);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(othersbutton)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ekle, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                .addComponent(görüntüle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(27, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Jazz)
                                    .addComponent(Hepsi)
                                    .addComponent(Klasik)
                                    .addComponent(Pop))
                                .addGap(106, 106, 106))
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(Hepsi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Jazz)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Klasik)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Pop)
                .addGap(26, 26, 26)
                .addComponent(görüntüle, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(othersbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>                        

    private void tümMouseClicked(java.awt.event.MouseEvent evt) {                                 
        new userMainPage().setVisible(true);
        this.setVisible(false);
    }                                

    private void playlistMouseClicked(java.awt.event.MouseEvent evt) {                                      
        new userPlaylist().setVisible(true);
        this.setVisible(false);
    }                                     

    private void othersMouseClicked(java.awt.event.MouseEvent evt) {                                    
        new userOthers().setVisible(true);
        this.setVisible(false);
    }                                   

    private void top10MouseClicked(java.awt.event.MouseEvent evt) {                                   
        new userTop10().setVisible(true);
        this.setVisible(false);
    }                                  

    private void ekleMouseClicked(java.awt.event.MouseEvent evt) {                                  
        PreparedStatement ps = null;
        try {
            String Query = "INSERT INTO 'playlist'('playlistsahibi','playlistalbumadi','playlistsarkici','playlistadi','playlistturu','playlistçıkıs','playlistdinleme')VALUES(?,?,?,?,?,?,?)";
            ps = connection.connect().prepareStatement(Query);
            int i = table.getSelectedRow();
            TableModel model = table.getModel();
            ps.setString(1, isim2.getKullanıcıAdi());
            ps.setString(2, model.getValueAt(i, 1).toString());
            ps.setString(3, model.getValueAt(i, 2).toString());
            ps.setString(4, model.getValueAt(i, 3).toString());
            ps.setString(5, model.getValueAt(i, 4).toString());
            ps.setString(6, model.getValueAt(i, 5).toString());
            ps.setString(7, model.getValueAt(i, 6).toString());

            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "ALBUM EKLENDİ");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();

            } catch (Exception e) {

            }
        }
    }                                 

    private void othersbuttonMouseClicked(java.awt.event.MouseEvent evt) {                                          
        new userOthers().setVisible(true);
        this.setVisible(false);
    }                                         

    private void othersbuttonActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void KlasikActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void HepsiActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void JazzActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    private void görüntüleMouseClicked(java.awt.event.MouseEvent evt) {                                       
        if (Hepsi.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showPlaylists();

        } else if (Jazz.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showJazzlists();
        } else if (Klasik.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showKlasiklists();
        } else if (Pop.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showPoplists();
        }
    }                                      

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                      
        new userPanel().setVisible(true);
        this.setVisible(false);
    }                                     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userOthers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userOthers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userOthers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userOthers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userOthersSec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JRadioButton Hepsi;
    private javax.swing.JRadioButton Jazz;
    private javax.swing.JRadioButton Klasik;
    private javax.swing.JRadioButton Pop;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton ekle;
    private javax.swing.JButton görüntüle;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu others;
    private javax.swing.JButton othersbutton;
    private javax.swing.JMenu playlist;
    private javax.swing.JTable table;
    private javax.swing.JMenu top10;
    private javax.swing.JMenu tüm;
    // End of variables declaration                   

    @Override
    public void tableChanged(TableModelEvent tme) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
**********************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Arthas
 */
public class userPanel extends javax.swing.JFrame {

    int uyelikType = 0;

   static private String kullanıcıAdi;

   public String getKullanıcıAdi() {
        return kullanıcıAdi;
    }

    /**
     * @param kullanıcıAdi the kullanıcıAdi to set
     */
    public void setKullanıcıAdi(String kullanıcıAdi) {
        this.kullanıcıAdi = kullanıcıAdi;
    }

    /**
     * Creates new form userPanel
     */
    public userPanel() {
     
        initComponents();
    }
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        userRegisterEmailText = new javax.swing.JTextField();
        userRegisterNickNameText = new javax.swing.JTextField();
        userRegisterButton = new javax.swing.JButton();
        userSignNickNameText = new javax.swing.JTextField();
        userSignEmailText = new javax.swing.JTextField();
        userSignButton = new javax.swing.JButton();
        userInfoLabel2 = new javax.swing.JLabel();
        userInfoLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        userNormal = new javax.swing.JRadioButton();
        userRegisterPasswordText = new javax.swing.JPasswordField();
        userRegisterRePasswordText = new javax.swing.JPasswordField();
        userPremium = new javax.swing.JRadioButton();
        userSignPasswordText = new javax.swing.JPasswordField();
        userTurnBack = new javax.swing.JButton();
        userBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(userRegisterEmailText, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, 202, 46));
        getContentPane().add(userRegisterNickNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 202, 50));

        userRegisterButton.setBackground(new java.awt.Color(153, 0, 255));
        userRegisterButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        userRegisterButton.setForeground(new java.awt.Color(255, 153, 204));
        userRegisterButton.setText("Register");
        userRegisterButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 0), new java.awt.Color(51, 153, 255), new java.awt.Color(255, 0, 51), new java.awt.Color(255, 51, 204)));
        userRegisterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userRegisterButtonMouseClicked(evt);
            }
        });
        getContentPane().add(userRegisterButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 530, 140, 60));
        getContentPane().add(userSignNickNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 230, 202, 50));
        getContentPane().add(userSignEmailText, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 300, 202, 46));

        userSignButton.setBackground(new java.awt.Color(255, 153, 255));
        userSignButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        userSignButton.setForeground(new java.awt.Color(153, 0, 255));
        userSignButton.setText("Sign Up");
        userSignButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userSignButtonMouseClicked(evt);
            }
        });
        getContentPane().add(userSignButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 450, 140, 60));

        userInfoLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        userInfoLabel2.setForeground(new java.awt.Color(255, 255, 255));
        userInfoLabel2.setText("Hesabınız Var Mı?Giriş Yapın.");
        getContentPane().add(userInfoLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 120, 280, 80));

        userInfoLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        userInfoLabel1.setForeground(new java.awt.Color(255, 255, 255));
        userInfoLabel1.setText("Henüz Üye Değil Misiniz?");
        getContentPane().add(userInfoLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 260, 80));

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Password:");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 330, 80, -1));

        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText(":Password");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 390, 80, -1));

        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText(":NickName");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 250, 80, -1));

        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText(":Email");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 320, 80, -1));

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("RePassword:");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 400, 100, -1));

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Email:");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 250, 80, -1));

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("NickName:");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 80, -1));

        userNormal.setBackground(new java.awt.Color(255, 204, 0));
        buttonGroup.add(userNormal);
        userNormal.setForeground(new java.awt.Color(255, 255, 255));
        userNormal.setText("Normal Üyelik");
        getContentPane().add(userNormal, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 480, -1, 20));
        getContentPane().add(userRegisterPasswordText, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 310, 200, 50));
        getContentPane().add(userRegisterRePasswordText, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 380, 200, 50));

        userPremium.setBackground(new java.awt.Color(255, 102, 51));
        buttonGroup.add(userPremium);
        userPremium.setForeground(new java.awt.Color(255, 255, 255));
        userPremium.setText("Premium Üyelik");
        userPremium.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 0, 51)));
        getContentPane().add(userPremium, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 440, -1, -1));
        getContentPane().add(userSignPasswordText, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 370, 200, 50));

        userTurnBack.setBackground(new java.awt.Color(255, 102, 0));
        userTurnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        userTurnBack.setForeground(new java.awt.Color(255, 255, 0));
        userTurnBack.setText("<---");
        userTurnBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTurnBackMouseClicked(evt);
            }
        });
        getContentPane().add(userTurnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 590, -1, -1));

        userBackground.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/b2.png"))); // NOI18N
        getContentPane().add(userBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 630));

        pack();
    }// </editor-fold>                        

    private void userRegisterButtonMouseClicked(java.awt.event.MouseEvent evt) {                                                
        PreparedStatement ps = null;
        ResultSet rs = null;

        String registerNickName;
        kullanıcıAdi=registerNickName;
        System.out.println(kullanıcıAdi);
        String registerEmail;
        String registerPassword;
        String registerRePassword;

        registerNickName = userRegisterNickNameText.getText();
        registerEmail = userRegisterEmailText.getText();
        registerPassword = String.valueOf(userRegisterPasswordText.getPassword());
        registerRePassword = String.valueOf(userRegisterRePasswordText.getPassword());

        Connection con = connection.connect();
        if (userPremium.isSelected()) {
            uyelikType = 1;
            JOptionPane.showMessageDialog(null, "ÖDEME İÇİN YÖNLENDİRİLECEKSİNİZ.LÜTFEN BEKLEYİNİZ.");
        } else if (userNormal.isSelected()) {
            uyelikType = 0;
        }

        if (registerNickName.equals("")) {
            JOptionPane.showMessageDialog(null, "ADINIZI GIRINIZ!");
        } else if (registerPassword.equals("")) {
            JOptionPane.showMessageDialog(null, "SIFRENIZI GIRINIZ!");
        } else if (mailkontrol(registerEmail)) {
            JOptionPane.showMessageDialog(null, "BU MAIL ADRESI ZATEN KULLANIMDA!");
        } else if (!registerPassword.equals(registerRePassword)) {
            JOptionPane.showMessageDialog(null, "SIFRELER ESLESMİYOR!");
        } else {

            String query = "INSERT INTO 'users'( 'usersNickName', 'usersEmail', 'usersPassword','usersSubscription') VALUES (?,?,?,?)";
            try {
                ps = con.prepareStatement(query);

                ps.setString(1, registerNickName);
                ps.setString(2, registerEmail);
                ps.setString(3, registerPassword);
                ps.setInt(4, uyelikType);

                userMainPage as = new userMainPage();
                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "KULLANICI EKLENDI!");
                    as.setVisible(true);
                    this.dispose();
                    this.setVisible(false);
                }

            } catch (Exception ex) {
                Logger.getLogger(adminPanel.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    ps.close();
                    rs.close();
                    con.close();
                } catch (Exception ex) {

                }

            }
        }
    }                                               
    public boolean mailkontrol(String mail) {
        PreparedStatement ps = null;
        ResultSet rs = null;
        boolean kontrol = false;
        String query = "SELECT * FROM 'users' WHERE 'usersEmail' =?";

        Connection con = connection.connect();
        try {
            ps = con.prepareStatement(query);
            ps.setString(1, mail);

            rs = ps.executeQuery();

            if (rs.next()) {
                kontrol = true;
            }
        } catch (Exception ex) {
            Logger.getLogger(userPanel.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                ps.close();
                rs.close();
                con.close();
            } catch (Exception ex) {

            }

        }
        return kontrol;
    }
    private void userSignButtonMouseClicked(java.awt.event.MouseEvent evt) {                                            
        PreparedStatement ps = null;
        ResultSet rs = null;
        Connection con = connection.connect();

        String signNickName;
        String signEmail;
        String signPassword;
        
        signNickName = userSignNickNameText.getText();
        kullanıcıAdi=signNickName;
        
        System.out.println(kullanıcıAdi);
        signEmail = userSignEmailText.getText();
        signPassword = String.valueOf(userSignPasswordText.getPassword());

        String query = "SELECT * FROM 'users' WHERE usersNickName =? AND usersEmail =? AND usersPassword =?";

        try {
            ps = con.prepareStatement(query);

            ps.setString(1, signNickName);
            ps.setString(2, signEmail);
            ps.setString(3, signPassword);
            userMainPage as = new userMainPage();
            rs = ps.executeQuery();
          
            if (rs.next()) {
                
                as.setVisible(true);
                as.pack();
                as.setLocationRelativeTo(null);
                /* as.setExtendedState(JFrame.MAXIMIZED_BOTH);
                as.isimetiketi.setText("Welcome < " + isim +" >");*/

                this.dispose();
            } else {
                JOptionPane.showMessageDialog(null, "GIRIS BASARISIZ");
            }
        } catch (Exception ex) {
            Logger.getLogger(adminPanel.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                ps.close();
                rs.close();
                con.close();
            } catch (Exception ex) {

            }

        }
       

    }                                           

    private void userTurnBackMouseClicked(java.awt.event.MouseEvent evt) {                                          
        new usersOradmin().setVisible(true);
        this.setVisible(false);
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userPanel().setVisible(true);
            }
        });
        
    }
   
    

    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel userBackground;
    private javax.swing.JLabel userInfoLabel1;
    private javax.swing.JLabel userInfoLabel2;
    private javax.swing.JRadioButton userNormal;
    private javax.swing.JRadioButton userPremium;
    private javax.swing.JButton userRegisterButton;
    private javax.swing.JTextField userRegisterEmailText;
    private javax.swing.JTextField userRegisterNickNameText;
    private javax.swing.JPasswordField userRegisterPasswordText;
    private javax.swing.JPasswordField userRegisterRePasswordText;
    private javax.swing.JButton userSignButton;
    private javax.swing.JTextField userSignEmailText;
    private javax.swing.JTextField userSignNickNameText;
    private javax.swing.JPasswordField userSignPasswordText;
    private javax.swing.JButton userTurnBack;
    // End of variables declaration                   

    /**
     * @return the kullanıcıAdi
     */
  
    

}
************************************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author UMUT
 */
public class userPlaylist extends javax.swing.JFrame implements TableModelListener {

    static String kullanıcıadi;
    static userPanel isim = new userPanel();

    /**
     * Creates new form userPlaylist
     */
    public userPlaylist() {
        kullanıcıadi = isim.getKullanıcıAdi();
        initComponents();

    }

    public ArrayList<PlaylistArama> playList() {
        ArrayList<PlaylistArama> playList = new ArrayList<>();
        Statement st = null;
        ResultSet rs = null;
        try {
            st = connection.connect().createStatement();
            String searchQuery = "SELECT * FROM 'playlist'";
            rs = st.executeQuery(searchQuery);
            PlaylistArama arama;
            while (rs.next()) {
                arama = new PlaylistArama(
                        rs.getInt("playlistid"),
                        rs.getString("playlistsahibi"),
                        rs.getString("playlistalbumadi"),
                        rs.getString("playlistsarkici"),
                        rs.getString("playlistadi"),
                        rs.getString("playlistturu"),
                        rs.getString("playlistçıkıs"),
                        rs.getInt("playlistdinleme")
                );
                playList.add(arama);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                st.close();
            } catch (Exception e) {

            }
        }

        return playList;
    }

    private void showPlaylists() {

        ArrayList<PlaylistArama> sonuc = playList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < sonuc.size(); i++) {
            if (sonuc.get(i).getPlaylistSahibi() == null ? isim.getKullanıcıAdi() == null : sonuc.get(i).getPlaylistSahibi().equals(isim.getKullanıcıAdi())) {
                row[0] = sonuc.get(i).getPlaylistId();
                row[1] = sonuc.get(i).getPlaylistAlbumAdi();
                row[2] = sonuc.get(i).getPlaylistSarkici();
                row[3] = sonuc.get(i).getPlaylistAdi();
                row[4] = sonuc.get(i).getPlaylistTuru();
                row[5] = sonuc.get(i).getPlaylistCıkıs();
                row[6] = sonuc.get(i).getPlaylistdinleme();
                model.addRow(row);

            }

        }
    }

    private void showJazzlists() {

        ArrayList<PlaylistArama> sonuc = playList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < sonuc.size(); i++) {
            if ("Jazz".equals(sonuc.get(i).getPlaylistTuru())) {
                if (sonuc.get(i).getPlaylistSahibi() == null ? isim.getKullanıcıAdi() == null : sonuc.get(i).getPlaylistSahibi().equals(isim.getKullanıcıAdi())) {
                    row[0] = sonuc.get(i).getPlaylistId();
                    row[1] = sonuc.get(i).getPlaylistAlbumAdi();
                    row[2] = sonuc.get(i).getPlaylistSarkici();
                    row[3] = sonuc.get(i).getPlaylistAdi();
                    row[4] = sonuc.get(i).getPlaylistTuru();
                    row[5] = sonuc.get(i).getPlaylistCıkıs();
                    row[6] = sonuc.get(i).getPlaylistdinleme();
                    model.addRow(row);
                }
            }

        }
    }

    private void showPoplists() {

        ArrayList<PlaylistArama> sonuc = playList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < sonuc.size(); i++) {
            if ("Pop".equals(sonuc.get(i).getPlaylistTuru())) {
                if (sonuc.get(i).getPlaylistSahibi() == null ? isim.getKullanıcıAdi() == null : sonuc.get(i).getPlaylistSahibi().equals(isim.getKullanıcıAdi())) {
                    row[0] = sonuc.get(i).getPlaylistId();
                    row[1] = sonuc.get(i).getPlaylistAlbumAdi();
                    row[2] = sonuc.get(i).getPlaylistSarkici();
                    row[3] = sonuc.get(i).getPlaylistAdi();
                    row[4] = sonuc.get(i).getPlaylistTuru();
                    row[5] = sonuc.get(i).getPlaylistCıkıs();
                    row[6] = sonuc.get(i).getPlaylistdinleme();
                    model.addRow(row);
                }
            }

        }
    }

    private void showKlasiklists() {

        ArrayList<PlaylistArama> sonuc = playList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < sonuc.size(); i++) {
            if (sonuc.get(i).getPlaylistSahibi() == null ? isim.getKullanıcıAdi() == null : sonuc.get(i).getPlaylistSahibi().equals(isim.getKullanıcıAdi())) {
                if ("Klasik".equals(sonuc.get(i).getPlaylistTuru())) {

                    row[0] = sonuc.get(i).getPlaylistId();
                    row[1] = sonuc.get(i).getPlaylistAlbumAdi();
                    row[2] = sonuc.get(i).getPlaylistSarkici();
                    row[3] = sonuc.get(i).getPlaylistAdi();
                    row[4] = sonuc.get(i).getPlaylistTuru();
                    row[5] = sonuc.get(i).getPlaylistCıkıs();
                    row[6] = sonuc.get(i).getPlaylistdinleme();
                    model.addRow(row);
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        Silme = new javax.swing.JButton();
        Jazz = new javax.swing.JRadioButton();
        Klasik = new javax.swing.JRadioButton();
        Pop = new javax.swing.JRadioButton();
        goruntule = new javax.swing.JButton();
        Hepsi = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        tüm = new javax.swing.JMenu();
        playlist = new javax.swing.JMenu();
        others = new javax.swing.JMenu();
        top10 = new javax.swing.JMenu();

        jMenu4.setText("File");
        jMenuBar2.add(jMenu4);

        jMenu5.setText("Edit");
        jMenuBar2.add(jMenu5);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 525));
        setPreferredSize(new java.awt.Dimension(800, 525));
        setSize(new java.awt.Dimension(800, 525));

        Silme.setText("Şarkıyı sil");
        Silme.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SilmeMouseClicked(evt);
            }
        });
        Silme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SilmeActionPerformed(evt);
            }
        });

        buttonGroup1.add(Jazz);
        Jazz.setText("Jazz");

        buttonGroup1.add(Klasik);
        Klasik.setText("Klasik");

        buttonGroup1.add(Pop);
        Pop.setText("Pop");

        goruntule.setText("görüntüle");
        goruntule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goruntuleMouseClicked(evt);
            }
        });

        buttonGroup1.add(Hepsi);
        Hepsi.setText("Hepsi");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Albüm ID", "Albüm Adı", "Şarkıcı Adı", "Şarkı Adı", "Şarkı Türü","Çıkış Tarihi","Dinlenme Sayısı"
            }
        ));
        jScrollPane2.setViewportView(table);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("<---");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        tüm.setText("Tüm Şarkılar");
        tüm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tümMouseClicked(evt);
            }
        });
        jMenuBar1.add(tüm);

        playlist.setText("Çalma Listelerim");
        playlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playlistMouseClicked(evt);
            }
        });
        jMenuBar1.add(playlist);

        others.setText("Diğer Kullanıcılar");
        others.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                othersMouseClicked(evt);
            }
        });
        jMenuBar1.add(others);

        top10.setText("Top 10");
        top10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                top10MouseClicked(evt);
            }
        });
        jMenuBar1.add(top10);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Hepsi)
                            .addComponent(Jazz)
                            .addComponent(Klasik)
                            .addComponent(Pop)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(goruntule, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                            .addComponent(Silme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(59, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(Hepsi)
                .addGap(11, 11, 11)
                .addComponent(Jazz)
                .addGap(18, 18, 18)
                .addComponent(Klasik)
                .addGap(18, 18, 18)
                .addComponent(Pop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(goruntule, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Silme, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(131, 131, 131)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>                        

    private void SilmeActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void playlistMouseClicked(java.awt.event.MouseEvent evt) {                                      

    }                                     

    private void goruntuleMouseClicked(java.awt.event.MouseEvent evt) {                                       

        if (Hepsi.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showPlaylists();

        } else if (Jazz.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showJazzlists();
        } else if (Klasik.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showKlasiklists();
        } else if (Pop.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showPoplists();
        }
    }                                      

    private void SilmeMouseClicked(java.awt.event.MouseEvent evt) {                                   
        ArrayList<PlaylistArama> sonuc = playList();
        PreparedStatement ps = null;
           
        try {
            
            
           for(int i=0;i<sonuc.size();i++)
           {   
               if(sonuc.get(i).getPlaylistSahibi() == null ? isim.getKullanıcıAdi() == null : sonuc.get(i).getPlaylistSahibi().equals(isim.getKullanıcıAdi())){ 
            //    System.out.println(value);
            int row = table.getSelectedRow();
            String value = (table.getModel().getValueAt(row, 0).toString());
            String Query = "DELETE  FROM playlist WHERE playlistid=" +value;
            ps = connection.connect().prepareStatement(Query);  
            ps.executeUpdate();
            if (ps.executeUpdate() > 1) {
                JOptionPane.showMessageDialog(null, "ALBUM SILINDI");
            }    
            }
            }


            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            if (Hepsi.isSelected()) {
                showPlaylists();
            } else if (Jazz.isSelected()) {
                showJazzlists();
            } else if (Klasik.isSelected()) {
                showKlasiklists();
            } else if (Pop.isSelected()) {
                showPoplists();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                ps.close();
            } catch (Exception e) {

            }
        }
    }                                  

    private void tümMouseClicked(java.awt.event.MouseEvent evt) {                                 
        new userMainPage().setVisible(true);
        this.setVisible(false);
    }                                

    private void othersMouseClicked(java.awt.event.MouseEvent evt) {                                    
         new userOthers().setVisible(true);
        this.setVisible(false);
    }                                   

    private void top10MouseClicked(java.awt.event.MouseEvent evt) {                                   
         new userTop10().setVisible(true);
        this.setVisible(false);
    }                                  

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                      
       new userPanel().setVisible(true);
        this.setVisible(false);
    }                                     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userPlaylist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userPlaylist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userPlaylist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userPlaylist.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userPlaylist().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JRadioButton Hepsi;
    private javax.swing.JRadioButton Jazz;
    private javax.swing.JRadioButton Klasik;
    private javax.swing.JRadioButton Pop;
    private javax.swing.JButton Silme;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton goruntule;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenu others;
    private javax.swing.JMenu playlist;
    private javax.swing.JTable table;
    private javax.swing.JMenu top10;
    private javax.swing.JMenu tüm;
    // End of variables declaration                   

    @Override
    public void tableChanged(TableModelEvent tme) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
**********************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;

import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author UMUT
 */
public class userTop10 extends javax.swing.JFrame implements TableModelListener {

    /**
     * Creates new form userTop10
     */
    public userTop10() {
        initComponents();
    }

    public ArrayList<Arama> albumList() {
        ArrayList<Arama> albumList = new ArrayList<>();
        Statement st = null;
        ResultSet rs = null;
        try {
            st = connection.connect().createStatement();
            String searchQuery = "SELECT * FROM 'album' ORDER BY 'albumcount' DESC";
            rs = st.executeQuery(searchQuery);
            Arama arama;
            while (rs.next()) {
                arama = new Arama(
                        rs.getInt("albumid"),
                        rs.getString("albumName"),
                        rs.getString("albumAuthor"),
                        rs.getString("albumSong"),
                        rs.getString("albumType"),
                        rs.getString("albumDate"),
                        rs.getInt("albumcount")
                );
                albumList.add(arama);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        } finally {
            try {
                rs.close();
                st.close();
            } catch (Exception e) {

            }
        }

        return albumList;
    }

    private void showAlbums() {
        int a = 0;
        ArrayList<Arama> sonuc = albumList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < sonuc.size(); i++) {
            if (a < 10) {
                row[0] = sonuc.get(i).getAlbumid();
                row[1] = sonuc.get(i).getAlbumName();
                row[2] = sonuc.get(i).getAlbumAuthor();
                row[3] = sonuc.get(i).getAlbumSong();
                row[4] = sonuc.get(i).getAlbumDate();
                row[5] = sonuc.get(i).getAlbumType();
                row[6] = sonuc.get(i).getAlbumCount();
                model.addRow(row);
                a++;
            }

        }
    }

    private void showJazz() {
        int a = 0;
        ArrayList<Arama> sonuc = albumList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < sonuc.size(); i++) {
            if ("Jazz".equals(sonuc.get(i).getAlbumType())) {
                if (a < 10) {
                    row[0] = sonuc.get(i).getAlbumid();
                    row[1] = sonuc.get(i).getAlbumName();
                    row[2] = sonuc.get(i).getAlbumAuthor();
                    row[3] = sonuc.get(i).getAlbumSong();
                    row[4] = sonuc.get(i).getAlbumDate();
                    row[5] = sonuc.get(i).getAlbumType();
                    row[6] = sonuc.get(i).getAlbumCount();
                    model.addRow(row);
                    a++;
                }
            }

        }
    }

    private void showPop() {
        int a = 0;
        ArrayList<Arama> sonuc = albumList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < sonuc.size(); i++) {
            if ("Pop".equals(sonuc.get(i).getAlbumType())) {
                if (a < 10) {
                    row[0] = sonuc.get(i).getAlbumid();
                    row[1] = sonuc.get(i).getAlbumName();
                    row[2] = sonuc.get(i).getAlbumAuthor();
                    row[3] = sonuc.get(i).getAlbumSong();
                    row[4] = sonuc.get(i).getAlbumDate();
                    row[5] = sonuc.get(i).getAlbumType();
                    row[6] = sonuc.get(i).getAlbumCount();
                    model.addRow(row);
                    a++;
                }
            }

        }
    }

    private void showKlasik() {
        int a = 0;
        ArrayList<Arama> sonuc = albumList();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        Object[] row = new Object[7];

        for (int i = 0; i < sonuc.size(); i++) {
            if ("Klasik".equals(sonuc.get(i).getAlbumType())) {
                if (a < 10) {
                    row[0] = sonuc.get(i).getAlbumid();
                    row[1] = sonuc.get(i).getAlbumName();
                    row[2] = sonuc.get(i).getAlbumAuthor();
                    row[3] = sonuc.get(i).getAlbumSong();
                    row[4] = sonuc.get(i).getAlbumDate();
                    row[5] = sonuc.get(i).getAlbumType();
                    row[6] = sonuc.get(i).getAlbumCount();
                    model.addRow(row);
                    a++;
                }
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        Jazz = new javax.swing.JRadioButton();
        Klasik = new javax.swing.JRadioButton();
        Pop = new javax.swing.JRadioButton();
        görüntüle = new javax.swing.JButton();
        hepsi = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        tüm = new javax.swing.JMenu();
        playlist = new javax.swing.JMenu();
        others = new javax.swing.JMenu();
        top10 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 525));
        setPreferredSize(new java.awt.Dimension(800, 525));
        setSize(new java.awt.Dimension(800, 525));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Albüm ID", "Albüm Adı", "Şarkıcı", "Şarkı", "Albüm Tarihi", "Albüm Türü", "Din. Sayısı"
            }
        ));
        jScrollPane1.setViewportView(table);

        buttonGroup1.add(Jazz);
        Jazz.setText("Jazz");

        buttonGroup1.add(Klasik);
        Klasik.setText("Klasik");

        buttonGroup1.add(Pop);
        Pop.setText("Pop");

        görüntüle.setText("Görüntüle");
        görüntüle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                görüntüleMouseClicked(evt);
            }
        });
        görüntüle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                görüntüleActionPerformed(evt);
            }
        });

        buttonGroup1.add(hepsi);
        hepsi.setText("Tüm Şarkılar");
        hepsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hepsiActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("<---");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/indiryeni.png"))); // NOI18N

        tüm.setText("Tüm Şarkılar");
        tüm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tümMouseClicked(evt);
            }
        });
        jMenuBar1.add(tüm);

        playlist.setText("Çalma Listelerim");
        playlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                playlistMouseClicked(evt);
            }
        });
        jMenuBar1.add(playlist);

        others.setText("Diğer Kullanıcılar");
        others.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                othersMouseClicked(evt);
            }
        });
        jMenuBar1.add(others);

        top10.setText("Top10");
        top10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                top10MouseClicked(evt);
            }
        });
        jMenuBar1.add(top10);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hepsi, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Jazz)
                            .addComponent(Klasik)
                            .addComponent(Pop))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(görüntüle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 16, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hepsi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Jazz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Klasik)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Pop)
                        .addGap(18, 18, 18)
                        .addComponent(görüntüle, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void tümMouseClicked(java.awt.event.MouseEvent evt) {                                 
        new userMainPage().setVisible(true);
        this.setVisible(false);
    }                                

    private void playlistMouseClicked(java.awt.event.MouseEvent evt) {                                      
        new userPlaylist().setVisible(true);
        this.setVisible(false);
    }                                     

    private void othersMouseClicked(java.awt.event.MouseEvent evt) {                                    
        new userOthers().setVisible(true);
        this.setVisible(false);
    }                                   

    private void top10MouseClicked(java.awt.event.MouseEvent evt) {                                   
        new userTop10().setVisible(true);
        this.setVisible(false);
    }                                  

    private void hepsiActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void görüntüleMouseClicked(java.awt.event.MouseEvent evt) {                                       
        if (hepsi.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showAlbums();
        } else if (Jazz.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showJazz();
        } else if (Pop.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showPop();
        } else if (Klasik.isSelected()) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setRowCount(0);
            showKlasik();
        }
    }                                      

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                      
        new userPanel().setVisible(true);
        this.setVisible(false);
    }                                     

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void görüntüleActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userTop10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userTop10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userTop10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userTop10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userTop10().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JRadioButton Jazz;
    private javax.swing.JRadioButton Klasik;
    private javax.swing.JRadioButton Pop;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton görüntüle;
    private javax.swing.JRadioButton hepsi;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu others;
    private javax.swing.JMenu playlist;
    private javax.swing.JTable table;
    private javax.swing.JMenu top10;
    private javax.swing.JMenu tüm;
    // End of variables declaration                   

    @Override
    public void tableChanged(TableModelEvent tme) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
**********************************************************************************************************
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package songsfile;


/**
 *
 * @author Arthas
 */
public class usersOradmin extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public usersOradmin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        kullaniciGirisButton = new javax.swing.JButton();
        adminGirisButton = new javax.swing.JButton();
        BackGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("users/admin");
        setMaximumSize(null);
        setPreferredSize(null);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kullaniciGirisButton.setBackground(new java.awt.Color(0, 0, 0));
        kullaniciGirisButton.setForeground(new java.awt.Color(255, 255, 255));
        kullaniciGirisButton.setText("Kullanıcı Giriş");
        kullaniciGirisButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kullaniciGirisButtonMouseClicked(evt);
            }
        });
        getContentPane().add(kullaniciGirisButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 250, 130, 40));

        adminGirisButton.setBackground(new java.awt.Color(0, 0, 0));
        adminGirisButton.setForeground(new java.awt.Color(255, 255, 255));
        adminGirisButton.setText("Admin Giriş");
        adminGirisButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                adminGirisButtonMouseClicked(evt);
            }
        });
        getContentPane().add(adminGirisButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 130, 40));

        BackGround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bg.png"))); // NOI18N
        getContentPane().add(BackGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>                        

    private void adminGirisButtonMouseClicked(java.awt.event.MouseEvent evt) {                                              
        new adminPanel().setVisible(true);
        this.setVisible(false);
        
    }                                             

    private void kullaniciGirisButtonMouseClicked(java.awt.event.MouseEvent evt) {                                                  
       new userPanel().setVisible(true);
       this.setVisible(false);
    }                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(usersOradmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(usersOradmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(usersOradmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(usersOradmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new usersOradmin().setVisible(true);
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel BackGround;
    private javax.swing.JButton adminGirisButton;
    private javax.swing.JButton kullaniciGirisButton;
    // End of variables declaration                   
}
*************************************************************************